"""
Django settings for IndeedJobTracker project.

Generated by 'django-admin startproject' using Django 4.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
import environ
from pathlib import Path
from google.oauth2 import service_account
from corsheaders.defaults import default_headers

# Build paths inside the project like this: BASE_DIR / 'subdir'.



env = environ.Env()
# read th .env file
environ.Env.read_env()
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
BASE_DIR = Path(__file__).resolve().parent.parent
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ogxe-&q3=dp#_d=0y$myx$ujjq%doawg23pb5lvaibt(9ge75&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

# ALLOWED_HOSTS = ['.vercel.app']
ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'questions'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'IndeedJobTracker.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'IndeedJobTracker.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

indeed_BQ_CRED_PATH = env('indeed_BQ_CRED_PATH')
# firebase_credentals = env('FIREBASE_CREDENTAILS')
storage_credentials = service_account.Credentials.from_service_account_file(indeed_BQ_CRED_PATH)



# CORS settings
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_METHODS = [ 'DELETE', 'GET', 'OPTIONS', 'PATCH', 'POST', 'PUT', ]


browser_headers = ['Content-Length',
 'Content-Type',
 'Host',
 'Connection',
 'Accept-Encoding',
 'Cf-Ipcountry',
 'X-Forwarded-For',
 'Cf-Ray',
 'X-Forwarded-Proto',
 'Cf-Visitor',
 'Pragma',
 'Cache-Control',
 'Sec-Ch-Ua',
 'Sec-Ch-Ua-Mobile',
 'User-Agent',
 'Sec-Ch-Ua-Platform',
 'Accept',
 'Origin',
 'Sec-Fetch-Site',
 'Sec-Fetch-Mode',
 'Sec-Fetch-Dest',
 'Referer',
 'Accept-Language',
 'Cf-Connecting-Ip',
 'Cdn-Loop']

CORS_ALLOW_HEADERS = list(default_headers) + browser_headers + [
    "cache-control",
    "pragma",

    # Cloudflare Headers
    "CF-Connecting-IP",
    "True-Client-IP",
    "True-Client-IP",
    "CF-Connecting-IP",
    "X-Forwarded-For",
    "CF-ray,CF-IPCountry",
    "CF-Visitor,CDN-Loop",
    "CF-Worker",

]



